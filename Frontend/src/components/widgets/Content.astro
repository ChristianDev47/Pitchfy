---
import type { Content as Props } from '~/types';
import Headline from '../ui/Headline.astro';
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import Check from '~/components/ui/svg/Check.astro';


const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  callToAction,
  items = [],
  image = await Astro.slots.render('image'),
  isReversed = false,
  isAfterContent = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-5xl mx-auto ${isAfterContent ? 'pt-0 md:pt-0 lg:pt-0' : ''} ${classes?.container ?? ''}`}
  bg={bg}
>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={{
      container: 'max-w-xl sm:mx-auto lg:max-w-2xl',
      title: 'text-3xl font-bold tracking-tighter mb-4 font-heading mx-[2rem]',
      subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400',
    }}
  />
  <div class="p-4 mx-auto max-w-7xl md:px-8">
    <div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} md:gap-16`}>
      <div class="self-center md:basis-1/2">
        {content && <div class="mb-6 text-md dark:text-slate-400" set:html={content} />}

        {
          callToAction && (
            <div class="mt-[-40px] mb-8 text-primary">  
              <Button variant="link" {...callToAction} />
            </div>
          )
        }
        <div aria-hidden="true" class="mt-5 md:mt-0 md:basis-1/2">
          {
            items && (
              <div class={`flex flex-col space-y-2 `}>
                {items.map(({ title, description, callToAction, classes: itemClasses = {} }) => (
                  <div class="intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
                    <div class={`flex flex-row max-w-md ${itemClasses?.panel}`}>
                      <div class="flex justify-center">
                        <Check class="mt-1.5 mr-2 size-4 text-tertiary" />
                      </div>
                      <div class="mt-0.5">
                        {title && <h3 class={`text-[20px] font-bold ${itemClasses?.title}`}>{title}</h3>}
                        {description && (
                          <p
                            class={`${title ? 'mt-2' : ''} text-[15px] ${itemClasses?.description}`}
                            set:html={description}
                          />
                        )}
                        {callToAction && (
                          <div class={`${title || description ? 'mt-3' : ''} ${itemClasses?.actionClass}`}>
                            <Button variant="link" {...callToAction} />
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )
          }
        </div>
      </div>

      <div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2">
        {
          image && (
            <div class="relative max-w-4xl m-auto">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="w-full mx-auto rounded-lg shadow-lg"
                  width={500}
                  height={500}
                  widths={[400, 768]}
                  sizes="(max-width: 768px) 100vw, 432px"
                  layout="responsive"
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</WidgetWrapper>
