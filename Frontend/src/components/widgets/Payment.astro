---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid2 from '~/components/ui/ItemGrid2.astro';
import { Icon } from 'astro-icon/components';
import type { Payment as Props } from '~/types';
import ButtonPay from '~/components/ui/ButtonPay';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid2
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      title: 'text-2xl',
      container: 'gap-4 md:gap-6',
      panel:
        'rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-6',
      icon: 'w-12 h-12 mb-6 text-primary',
      ...((classes?.items as Record<string, never>) ?? {}),
    }}
  />
  <div class="relative flex items-start justify-center w-full gap-8 wdt-heading-title-wrapper wdt-heading-align-center wdt-heading-deco-wrapper motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
    {
      items && items.map(item => (
      <div class="flex flex-col justify-between w-full max-w-sm px-5 py-8 text-center bg-white border border-gray-200 rounded-lg shadow backdrop-blur dark:border-gray-700 dark:bg-slate-900">
        <div class="absolute right-[-5px] 2xl:right-[-8px] rtl:right-auto rtl:left-[-8px] rtl:2xl:left-[-10px] top-[-5px] 2xl:top-[-10px] z-[1] h-[100px] w-[100px] overflow-hidden text-right">
          <span class="absolute top-[19px] right-[-21px] rtl:right-auto rtl:left-[-21px] block w-full rotate-45 rtl:-rotate-45 bg-green-700 text-center text-[10px] font-bold uppercase leading-5 text-white shadow-[0_3px_10px_-5px_rgba(0,0,0,0.3)] before:absolute before:left-0 before:top-full before:z-[-1] before:border-[3px] before:border-r-transparent before:border-b-transparent before:border-l-green-800 before:border-t-green-800 before:content-[''] after:absolute after:right-0 after:top-full after:z-[-1] after:border-[3px] after:border-l-transparent after:border-b-transparent after:border-r-green-800 after:border-t-green-800 after:content-['']">
            New
          </span>
        </div>
        <div class="px-2 py-0">
          <h3 class="mb-1 text-[20px] font-semibold leading-6 tracking-wider text-center uppercase">{item.title}</h3>
          {subtitle && <p class="font-light text-gray-600 text-[18px] dark:text-slate-400">{item.description}</p>}
          <div class="my-2">
            <div class="flex items-center justify-center mb-1 text-center">
              <span class="text-[1.5rem]">$</span>
              <span class="text-[2.5rem] font-extrabold">{item.value}</span>
            </div>
            <span class="text-base leading-6 text-gray-600 lowercase dark:text-slate-400">{item.time}</span>
          </div>
          {item.points && (
            <ul class="my-8 space-y-2 text-left ">
              {item.points.map(point =>
                  point && (
                    <li class="mb-1.5 flex items-start space-x-3 leading-7">
                      <div class="mt-1.5 rounded-full bg-primary">
                          <Icon name={'tabler:check'} class="w-4 h-4 p-1 font-bold text-white" />
                      </div>
                      <span class="text-[15px]">{point}</span>
                    </li>
                  )
              )}
            </ul>
          )}
        <div>
          <ButtonPay client:visible item={item.plan}/>
        </div>
        </div>
      </div>
    ))}
  </div>
</WidgetWrapper>
